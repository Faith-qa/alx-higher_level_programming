#!/usr/bin/python3
"""defining nodes"""


class node:
    """defines a node of a single linked list"""
    def __init__(self, data, next_node=None):
        self.__data = data
        self.__next_node = next node

    @property
    def data(self):
        return self.__data

    @data.setter
    def data(self, data):
        if not isinstance(data, int):
            raise TypeError('data must be an integer')
        self.__data = data

    @property
    def next_node(self):
        return self.__next_node

    @next_node.setter
    def next_node(self, next_node):
        if next_node != None or type(next_node) != Node:
            raise TypeError('next_node must be a Node object')
        self.__next_node = next_node

class SinglyLinkedList:
    """defines a singly linked list by private instance attribute"""
    def __init__(self, head):
        self.__head = head

        
        